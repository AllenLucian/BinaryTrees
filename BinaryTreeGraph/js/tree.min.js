Ext.define("MJ.BinaryTreeInfo",{getRoot:function(){},getLeft:function(t){},getRight:function(t){},getString:function(t){}}),Ext.define("MJ.BinaryTree",{config:{size:0,root:null,elements:null},constructor:function(t){this.initConfig(t)},add:function(t,e,i){var r,n,h;t&&(r=null,this.root?r=this._node(t):(r=this.root=new MJ.BinaryTree.Node({element:t}),this.size=1),r&&(e&&(n=r.left,r.left=new MJ.BinaryTree.Node({element:e,parent:r}),n?(r.left.left=n.left,r.left.right=n.right):this.size++),i&&(h=r.right,r.right=new MJ.BinaryTree.Node({element:i,parent:r}),h?(r.right.left=h.left,r.right.right=h.right):this.size++)))},_node:function(t){var e,i;if(!t||!this.root)return null;for((e=[]).push(this.root);e.length>0;){if(i=e.shift(),0===MJ.Comparator.compare(i.element,t))return i;i.left&&e.push(i.left),i.right&&e.push(i.right)}},remove:function(t){var e,i,r=this._node(t);r&&(this.size--,r.left&&r.right&&(e=this.successor(r),r.element=e.element,r=e),(i=r.left?r.left:r.right)?(i.parent=r.parent,r.parent?r.parent.left===r?r.parent.left=i:r.parent.right=i:this.root=i,this.afterRemove(r,i),r.left=r.right=r.parent=null):r.parent?(r===r.parent.left?r.parent.left=null:r.parent.right=null,this.afterRemove(r),r.parent=null):(this.root=null,this.afterRemove(r)))},afterRemove:function(t,e){},createNode:function(t,e){return new MJ.BinaryTree.Node({element:t,parent:e})},inorderTraversal:function(){var t=[];this._inorderTraversal(this.root,t),console.log(t.join(","))},_inorderTraversal:function(t,e){t&&(this._inorderTraversal(t.left,e),e.push(t.toString()),this._inorderTraversal(t.right,e))},getLeft:function(t){return t.left},getRight:function(t){return t.right},getString:function(t){return t.toString()},clear:function(){this.size=0,this.elements=null,this.root=null},predecessor:function(t){if(!t)return null;if(t.left){for(var e=t.left;e.right;)e=e.right;return e}for(;t.parent&&t===t.parent.left;)t=t.parent;return t.parent},successor:function(t){if(!t)return null;if(t.right){for(var e=t.right;e.left;)e=e.left;return e}for(;t.parent&&t===t.parent.right;)t=t.parent;return t.parent}}),Ext.define("MJ.BinaryTree.Node",{config:{left:null,right:null,parent:null,element:null,height:1},constructor:function(t){this.initConfig(t)},toString:function(){return this.element.toString()},isLeaf:function(){return!this.left&&!this.right},hasTwoChildren:function(){return this.left&&this.right},isLeftChild:function(){return this.parent&&this===this.parent.left},isRightChild:function(){return this.parent&&this===this.parent.right},tallerChild:function(){var t=this.left?this.left.height:0,e=this.right?this.right.height:0;return t>e?this.left:e>t?this.right:this.isLeftChild()?this.left:this.right}}),Ext.define("MJ.BinarySearchTree",{extend:"MJ.BinaryTree",config:{comparator:null},constructor:function(t){this.initConfig(t),this.callParent(arguments)},setElements:function(t){if(Ext.isArray(t)){for(var e in t)this.add(t[e]);this.elements=t}},_compare:function(t,e){return this.comparator?this.comparator.compare(t,e):MJ.Comparator.compare(t,e)},add:function(t){var e,i,r,n;if(t){if(!this.root)return this.root=this.createNode(t),void this.size++;for(e=this.root,i=this.root,r=0;null!==i;)if(r=this._compare(t,i.element),e=i,r>0)i=i.right;else{if(!(r<0))return void(i.element=t);i=i.left}n=this.createNode(t,e),r>0?e.right=n:e.left=n,this.size++,this.afterAdd(n)}},afterAdd:function(t){},_node:function(t){var e,i;if(!t)return null;for(e=this.root;e;){if(0===(i=this._compare(t,e.element)))return e;e=i>0?e.right:e.left}return e}}),Ext.define("MJ.AVLTree",{extend:"MJ.BinarySearchTree",constructor:function(t){this.initConfig(t),this.callParent(arguments)},createNode:function(t,e){return new MJ.AVLTree.Node({element:t,parent:e})},afterAdd:function(t){for(this.callParent(arguments),t=t.parent;t;){if(!t.isBalanced()){this.rebalance(t);break}t.updateHeight(),t=t.parent}},afterRemove:function(t,e){for(this.callParent(arguments),t=t.parent;t;)t.isBalanced()?t.updateHeight():this.rebalance(t),t=t.parent},afterRotate:function(t,e,i){t.isLeftChild()?t.parent.left=e:t.isRightChild()?t.parent.right=e:this.root=e,i&&(i.parent=t),e.parent=t.parent,t.parent=e,t.updateHeight(),e.updateHeight()},leftRotate:function(t){var e=t.right,i=e.left;t.right=i,e.left=t,this.afterRotate(t,e,i)},rightRotate:function(t){var e=t.left,i=e.right;t.left=i,e.right=t,this.afterRotate(t,e,i)},rebalance:function(t){p=t.tallerChild(),n=p.tallerChild(),p.isLeftChild()?n.isLeftChild()?this.rightRotate(t):(this.leftRotate(p),this.rightRotate(t)):n.isLeftChild()?(this.rightRotate(p),this.leftRotate(t)):this.leftRotate(t)}}),Ext.define("MJ.AVLTree.Node",{extend:"MJ.BinaryTree.Node",constructor:function(t){this.initConfig(t),this.callParent(arguments)},isBalanced:function(){return Math.abs(this.balanceFactor())<=1},balanceFactor:function(){return(this.left?this.left.height:0)-(this.right?this.right.height:0)},updateHeight:function(){var t=this.left?this.left.height:0,e=this.right?this.right.height:0;this.height=1+Math.max(t,e)}});